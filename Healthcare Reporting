{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [],
   "source": [
    "ur = pd.read_excel('UR.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [],
   "source": [
    "ur = ur.sort_values(['Full Name', 'Admission Date', 'Loc'], ascending = [True, True, True])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ur.loc[0:2, 'Days Authorized'].sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Admission Date', 'Discharge Date', 'Billibg LOS', 'Full Name',\n",
       "       'Insurance 1   Insurance Company', 'Status', 'Authorization Date',\n",
       "       'Start Date', 'End Date', 'Frequency', 'Days Authorized', 'Loc',\n",
       "       'Authorization #'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ur.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "consec = 1\n",
    "drop_indices = []\n",
    "\n",
    "for row in range(1, len(ur)-1):\n",
    "    \n",
    "    if (ur.loc[row, 'Full Name'] == ur.loc[row+1, 'Full Name'] and \n",
    "        ur.loc[row, 'Admission Date'] == ur.loc[row+1, 'Admission Date'] and\n",
    "        ur.loc[row, 'Loc'] == ur.loc[row+1, 'Loc']):\n",
    "        consec += 1\n",
    "        drop_indices.append(row+1)\n",
    "    else:\n",
    "        if (ur.loc[row, 'Full Name'] == ur.loc[row-1, 'Full Name'] and \n",
    "        ur.loc[row, 'Admission Date'] == ur.loc[row-1, 'Admission Date'] and\n",
    "        ur.loc[row, 'Loc'] == ur.loc[row-1, 'Loc']):\n",
    "            ur.loc[row-(consec-1), 'Days Authorized'] = ur.loc[row-(consec-1):row, 'Days Authorized'].sum()\n",
    "            consec = 1\n",
    "        else:\n",
    "            consec = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_ur = ur.drop(drop_indices, axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1817"
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(new_ur)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [],
   "source": [
    "new_ur.to_excel('NewURData.xlsx', index = False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
